=encoding UTF-8

=head1 NAME

Astro::Coord::Precession - Precess coordinates between 2 epochs

=head1 VERSION

Version 0.03

=head1 SYNOPSIS

 use Astro::Coord::Precession qw/precess precess_rad read_coordinates/;

 # If you have coordinates in float RA hours and Dec degrees:
 my $precessed = precess([$RA, $dec], $epoch_from, $epoch_to);
    
 # If you have coordinates in rad:
 my $precessed_rad = precess([$RA_rad, $dec_rad], $epoch_from, $epoch_to);

 # If you have coordinates in strings with RA h,m,s and Dec deg etc:
 my $coord = read_coordinates(['01 33 50.904', '+30 39 35.79']);
 my $precessed = precess($coord, 2000, 2021.15);

=head1 DESCRIPTION

A very simple, pure Perl module to precess equatorial coordinates from one epoch
to another, based on the algorithm P. Herget used in the Publications of the
Cincinnati Observatory.

=head1 METHODS

=head2 precess

 my $precessed = precess($coord, $epoch_from, $epoch_to);

Returns an arrayref C<[$RA, $dec]> with equatorial coordinates (0 <= RA < 24 in
hours, -90 <= Dec <= 90 in degrees), precessed from C<$epoch_from> (e.g. 2000)
to C<$epoch_to>.

C<$coord> input is similarly arrayref with RA in hours, Dec in degrees.

=head2 precess_rad

 my $precessed_rad = precess($coord, $epoch_from, $epoch_to);

Returns an arrayref C<[$RA, $dec]> with equatorial coordinates in rad, precessed
from C<$epoch_from> (e.g. 2000) to C<$epoch_to>.

The L<precess> function converts from/to rad anyway, so use this if you can work
with rad directly.

=head1 UTILITY FUNCTIONS

=head2 read_coordinates

 my $coord = read_coordinates([$ra_string, $dec_string]);

Returns coordinates in an arrayref of RA, dec in decimal values to use with L<precess>.
It accepts commonly used strings for RA, dec in hours and degrees respectivelly:

=over 4
 
=item * C<$ra_string>

It will read a string with hours, minutes, secs like C<'2 30 00'> or C<'2h30m30s'>
or C<'02:30:30'> etc. Single/double quotes and single/double prime symbols are
accepted for denoting minute, second in place of a single space/tab which also works.
Will accept negative too with preceding -, even though this is unusual and also
no seconds part.

=item * C<$dec_string>

It will read a string with degrees, minutes, secs like C<'+54 30 00'> or C<'54Â°30m30s'>
etc. Single/double quotes and single/double prime symbols are accepted for denoting
minute, second in place of a single space/tab which also works. Will also accept
no arc seconds part.

=back

=head1 AUTHOR

Dimitrios Kechagias, C<< <dkechag at cpan.org> >>

=head1 BUGS

Please report any bugs or feature requests to C<bug-astro-coord-precession at rt.cpan.org>, or through
the web interface at L<https://rt.cpan.org/NoAuth/ReportBug.html?Queue=Astro-Coord-Precession>.
You could also raise issues or submit PRs to the github repo below.

=head1 GIT

L<https://github.com/dkechag/Astro-Coord-Precession>

=head1 ACKNOWLEDGEMENTS

Based on the precession function from the fortran program CONFND, made by FO @ CDS
(francois@simbad.u-strasbg.fr).

=head1 LICENSE AND COPYRIGHT

This software is copyright (c) 2021 by Dimitrios Kechagias.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

